// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          UserRole  @default(USER)
  accounts      Account[]

  isTwoFactorEnabled Boolean       @default(false)
  appplications      Application[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model VerificationToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model PasswordResetToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model Application {
  id            String            @id @default(cuid())
  applicantId   String
  jobTitle      String
  jobReq        String
  status        ApplicationStatus @default(OFFER_GENERATED)
  dateSubmitted DateTime
  applicant     User              @relation(fields: [applicantId], references: [id], onDelete: Cascade)
  tasks         Task[]
}

model Task {
  id            String      @id @default(cuid())
  status        TaskStatus  @default(NOT_STARTED)
  applicationId String
  application   Application @relation(fields: [applicationId], references: [id], onDelete: Cascade)
  dateAssigned  DateTime
  fileUrl       String?
}

enum UserRole {
  ADMIN
  USER
}

enum ApplicationStatus {
  OFFER_GENERATED
}

enum TaskStatus {
  NOT_REVIEWED
  NOT_STARTED
}
